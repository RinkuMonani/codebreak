{"version":3,"sources":["webpack://code-breaker/./src/js/arena.js"],"names":["elements","themeImage","document","querySelector","contentCover","content","navigationMenu","header","startButton","resetButton","submitButton","gameArena","gameForm","gameInputFormList","currLevel","appear","el","style","opacity","addEventListener","level","console","log","classList","remove","add","i","markup","insertAdjacentHTML","initGameArena","reset","values","Array","from","querySelectorAll","forEach","index","v","parseInt","value","push","getGameFormValues","length","alert","el_margin","marginRight","slideFromRight","marginLeft","slideFromLeft"],"mappings":"MAAA,MAAMA,EAAW,CACbC,WAAYC,SAASC,cAAc,gBACnCC,aAAcF,SAASC,cAAc,kBACrCE,QAASH,SAASC,cAAc,YAChCG,eAAgBJ,SAASC,cAAc,oBACvCI,OAAQL,SAASC,cAAc,WAC/BK,YAAaN,SAASC,cAAc,iBACpCM,YAAaP,SAASC,cAAc,iBACpCO,aAAcR,SAASC,cAAc,kBACrCQ,UAAWT,SAASC,cAAc,eAClCS,SAAUV,SAASC,cAAc,aACjCU,kBAAmBX,SAASC,cAAc,0BAG9C,IAAIW,EAAY,EAEhB,MAQMC,EAASC,IACXA,EAAGC,MAAMC,QAAU,KAoEnBlB,EAASQ,YAAYW,iBAAiB,SAAS,KArC5BC,MAsCfC,QAAQC,IAAI,SAEZtB,EAASK,QAAQkB,UAAUC,OAAO,WAClCxB,EAASK,QAAQkB,UAAUE,IAAI,QAzChBL,EA4CA,EA1CnBpB,EAASW,UAAUY,UAAUC,OAAO,QACpCxB,EAASW,UAAUY,UAAUE,IAAI,WAGjCzB,EAASQ,YAAYe,UAAUC,OAAO,WACtCxB,EAASQ,YAAYe,UAAUE,IAAI,QAGnCzB,EAASS,YAAYc,UAAUC,OAAO,QACtCxB,EAASS,YAAYc,UAAUE,IAAI,WAEnCzB,EAASU,aAAaa,UAAUC,OAAO,QACvCxB,EAASU,aAAaa,UAAUE,IAAI,WAzBlBL,KAElBN,EAAYM,EAEZ,IAAI,IAAIM,EAAE,EAAGA,GAAGN,IAASM,EAAE,CACvB,MAAMC,EAAS,sBAAsBD,iEAErC1B,EAASa,kBAAkBe,mBAAmB,YAAYD,KAoB9DE,CAAcT,MAgCdpB,EAASS,YAAYU,iBAAiB,SAAS,KAC3CnB,EAASY,SAASkB,WAGtB9B,EAASU,aAAaS,iBAAiB,SAAS,KAC5CE,QAAQC,IAAI,UAEZ,MAAMS,EAnCY,MACtB,IAAIA,EAAS,GAYb,OAVYC,MAAMC,KAAK/B,SAASgC,iBAAiB,gBAE7CC,SAAQ,CAACnB,EAAIoB,KACb,MAAMC,EAAIC,SAAStB,EAAGuB,OACtB,IAAGD,SAASD,GAGR,OAAQ,EAFRN,EAAOS,KAAKH,MAKbN,GAsBYU,GAEZV,EAAOW,OAAS5B,EACf6B,MAAM,8BAGNtB,QAAQC,IAAIS,MA7EpBV,QAAQC,IAAI,QApBO,EAACN,EAAI4B,EAAU,KAClC5B,EAAGC,MAAM4B,YAAcD,GAQvBE,CAAe9C,EAASC,YAKxBc,EAAOf,EAASI,cAChBW,EAAOf,EAASM,gBAnBE,EAACU,EAAI4B,EAAU,KACjC5B,EAAGC,MAAM8B,WAAaH,GAmBtBI,CAAchD,EAASO,S","file":"js/arena.bundle.js","sourcesContent":["const elements = {\r\n    themeImage: document.querySelector('.theme-image'),\r\n    contentCover: document.querySelector('.content-cover'),\r\n    content: document.querySelector('.content'),\r\n    navigationMenu: document.querySelector('.navigation-menu'),\r\n    header: document.querySelector('.header'),\r\n    startButton: document.querySelector('.start-button'),\r\n    resetButton: document.querySelector('.reset-button'),\r\n    submitButton: document.querySelector('.submit-button'),\r\n    gameArena: document.querySelector('.game-arena'),\r\n    gameForm: document.querySelector('.gameForm'),\r\n    gameInputFormList: document.querySelector('.game-input-form-list'),\r\n}\r\n\r\nlet currLevel = 3;\r\n\r\nconst slideFromLeft = (el, el_margin=0) =>{\r\n    el.style.marginLeft = el_margin;\r\n}\r\n\r\nconst slideFromRight = (el, el_margin=0) =>{\r\n    el.style.marginRight = el_margin;\r\n}\r\n\r\nconst appear = el => {\r\n    el.style.opacity = \"1\";\r\n}\r\n\r\nconst displayThemeImage = el => {\r\n    slideFromRight(elements.themeImage);\r\n}\r\n\r\nconst displaycontentCover = () => {\r\n    // slideFromRight(elements.mainPageContent);\r\n    appear(elements.contentCover);\r\n    appear(elements.navigationMenu);\r\n    slideFromLeft(elements.header);\r\n}\r\n\r\nconst init = () => {\r\n    console.log('init');\r\n    displayThemeImage();\r\n    displaycontentCover();\r\n}\r\n\r\nconst initGameArena = level => {\r\n\r\n    currLevel = level;\r\n\r\n    for(let i=1; i<=level; ++i){\r\n        const markup = `<li id=\"game-input-${i}\"><input class=\"game-input\" type=\"text\" placeholder='X'></li>`;\r\n\r\n        elements.gameInputFormList.insertAdjacentHTML('beforeend',markup)\r\n    }\r\n}\r\n\r\nconst setUpGameArena = level => {\r\n    // display game-arena\r\n    elements.gameArena.classList.remove('hide');\r\n    elements.gameArena.classList.add('display');\r\n\r\n    // hide start button\r\n    elements.startButton.classList.remove('display');\r\n    elements.startButton.classList.add('hide');\r\n\r\n    // display reset button, submit button\r\n    elements.resetButton.classList.remove('hide');\r\n    elements.resetButton.classList.add('display');\r\n\r\n    elements.submitButton.classList.remove('hide');\r\n    elements.submitButton.classList.add('display');\r\n\r\n    initGameArena(level);\r\n\r\n}\r\n\r\nconst getGameFormValues = () => {\r\n    let values = []\r\n\r\n    const els = Array.from(document.querySelectorAll('.game-input'));\r\n    \r\n    els.forEach((el, index) => {\r\n        const v = parseInt(el.value);\r\n        if(parseInt(v))\r\n            values.push(v);\r\n        else \r\n            return -1;\r\n    });\r\n    // console.log(values);\r\n    return values;\r\n}\r\n\r\nconst addingEventListners = () => {\r\n    elements.startButton.addEventListener('click', ()=>{\r\n        console.log(\"start\");\r\n        // hide content\r\n        elements.content.classList.remove('display');\r\n        elements.content.classList.add('hide');\r\n\r\n        // set up arena\r\n        setUpGameArena(3);\r\n        \r\n    });\r\n\r\n    elements.resetButton.addEventListener('click', () => {\r\n        elements.gameForm.reset();\r\n    });\r\n\r\n    elements.submitButton.addEventListener('click', () => {\r\n        console.log('submit');\r\n        // get input values\r\n        const values = getGameFormValues();\r\n\r\n        if(values.length < currLevel){\r\n            alert(\"Invalid Values. Try Again.\");\r\n        }\r\n        else{\r\n            console.log(values);\r\n        }\r\n\r\n        // pass to judge, get result\r\n\r\n        // display result status if won/lose\r\n\r\n        // display hint\r\n    });\r\n}\r\n\r\naddingEventListners();\r\ninit();\r\n\r\n"],"sourceRoot":""}